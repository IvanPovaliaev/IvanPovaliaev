import clr
clr.AddReference('RevitServices')
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager
from System.Drawing import Color as DrawingColor
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *

# Function to convert ARGB color values to Revit Color
def argb_to_color(argb):
    alpha = (argb >> 24) & 255
    red = (argb >> 16) & 255
    green = (argb >> 8) & 255
    blue = argb & 255
    return Color(red, green, blue)

# Get the current Revit document
doc = DocumentManager.Instance.CurrentDBDocument

# Get the active view
active_view = doc.ActiveView

# Get the filters associated with the 3D view
filters = active_view.GetFilters()

# Input list of ARGB colors
argb_colors = IN[0]  # ARGB colors input parameter

# Start a transaction
TransactionManager.Instance.EnsureInTransaction(doc)

# Apply colors to filter overrides based on input colors
for index, color in enumerate(argb_colors):
    if index < len(filters):
        # Convert ARGB value to DrawingColor
        drawing_color = DrawingColor.FromArgb(color)
        # Convert DrawingColor to Revit Color
        revit_color = Color(drawing_color.R, drawing_color.G, drawing_color.B)
        filter = filters[index]
        # Set the filter color directly
        filter.OverrideColor = revit_color

# Commit the transaction
TransactionManager.Instance.TransactionTaskDone()

# Output the list of filters
OUT = filters
