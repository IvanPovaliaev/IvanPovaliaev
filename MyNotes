import clr
clr.AddReference('RevitServices')
from RevitServices.Persistence import DocumentManager
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *

# Get the current Revit document
doc = DocumentManager.Instance.CurrentDBDocument

# Get the active view
active_view = doc.ActiveView

# Check if the active view is a 3D view
if isinstance(active_view, View3D):
    # Get the filters associated with the 3D view
    filters = FilteredElementCollector(doc, active_view.Id).OfClass(ParameterFilterElement).ToElements()
    
    # Input list of ARGB colors
    argb_colors = IN[0]  # ARGB colors input parameter
    
    # Start a transaction
    TransactionManager.Instance.EnsureInTransaction(doc)
    
    # Apply colors to filter hatching based on input colors
    for index, filter in enumerate(filters):
        if index < len(argb_colors):
            # Convert ARGB value to Revit Color
            color = argb_colors[index]
            revit_color = Color(color.Red, color.Green, color.Blue)
            # Set the filter color directly
            filter.OverrideColor = revit_color
    
    # Commit the transaction
    TransactionManager.Instance.TransactionTaskDone()

    OUT = filters  # Return the list of active filters
else:
    OUT = None  # Return None if the active view is not a 3D view
