https://www.fileformat.info/info/unicode/category/So/list.htm
https://stackoverflow.com/questions/33580885/wmplib-console-app-exception-on-media-play

using System;
using System.Text;

public class MainClass
{
    public class ProgressBar
    {
        public int Length {get; private set;} //Длина строки прогресса
        private int currentProgress; //Текущий прогресс
        public int MaxValue {get; private set;} //Максимальный прогресс
        private int fillPosition;
        
        public ProgressBar()
        {
            Length = 10;
            currentProgress = 0;
            MaxValue = 100;
        }
        
        public void IncreaseProgresse(int value)
        {
            currentProgress += value;
            fillPosition = currentProgress*Length/MaxValue;
        }
        
        public string GetProgressBar()
        {
            var result = new StringBuilder(Length);
            var fillIndex = currentProgress / MaxValue;
            
            for (int i = 0; i < Length; i++)
            {
                if (i < fillPosition){
                    result.Append('\u2588');
                }
                else result.Append('\u2591');
            }
            return result.ToString();
        }
    }
    
    public static void Main()
    {
        Console.BackgroundColor = ConsoleColor.Yellow;
        Console.ForegroundColor = ConsoleColor.Black;
        var s =  new ProgressBar();
        for (int i =0; i < s.Length; i++)
        {
            s.IncreaseProgresse(7);
            Console.WriteLine(s.GetProgressBar());
        }
    }
}

Sub ExportToWordAsEquation()
    Dim wordApp As Object
    Dim wordDoc As Object
    Dim ws As Worksheet
    Dim cell As Range
    Dim eqRange As Object
    
    ' Устанавливаем соединение с Word
    On Error Resume Next
    Set wordApp = GetObject(class:="Word.Application")
    If wordApp Is Nothing Then
        Set wordApp = CreateObject(class:="Word.Application")
    End If
    On Error GoTo 0
    wordApp.Visible = True
    
    ' Создаем новый документ Word
    Set wordDoc = wordApp.Documents.Add
    
    ' Указываем лист и диапазон ячеек для экспорта
    Set ws = ThisWorkbook.Sheets("Sheet1") ' Измените на нужное имя листа
    
    ' Перебираем ячейки и добавляем их в уравнения в Word
    For Each cell In ws.Range("A1:A10") ' Замените диапазон на нужный вам
        If cell.Value <> "" Then
            ' Добавляем параграф для уравнения
            wordDoc.Paragraphs.Add
            Set eqRange = wordDoc.Paragraphs(wordDoc.Paragraphs.Count).Range
            eqRange.Text = cell.Value
            eqRange.OMaths.Add eqRange
            ProcessEquation eqRange.OMaths(1).Range
            eqRange.OMaths(1).BuildUp
        End If
    Next cell
End Sub

Sub ProcessEquation(eqRange As Object)
    ' Проходим по каждому символу и создаем уравнение с надстрочными и подстрочными индексами
    Dim i As Long
    Dim baseChar As Object
    Dim indexChar As Object
    Dim eq As Object
    
    ' Создаем уравнение для обработки
    Set eq = eqRange.OMaths(1)
    
    For i = 1 To eqRange.Characters.Count
        If Mid(eqRange.Text, i, 1) = "^" Then
            ' Создаем надстрочный индекс
            Set baseChar = eqRange.Characters(i - 1)
            Set indexChar = eqRange.Characters(i + 1)
            
            ' Используем встроенную функцию для создания надстрочного индекса
            With eq.Functions.Add(eqRange.Characters(i - 1), wdOMathFunctionSup)
                .Superscript.Range.Text = eqRange.Characters(i + 1).Text
            End With
            
            ' Удаляем исходные символы "^" и экспоненты
            eqRange.Characters(i + 1).Delete
            eqRange.Characters(i).Delete
        ElseIf Mid(eqRange.Text, i, 1) = "_" Then
            ' Создаем подстрочный индекс
            Set baseChar = eqRange.Characters(i - 1)
            Set indexChar = eqRange.Characters(i + 1)
            
            ' Используем встроенную функцию для создания подстрочного индекса
            With eq.Functions.Add(eqRange.Characters(i - 1), wdOMathFunctionSub)
                .Subscript.Range.Text = eqRange.Characters(i + 1).Text
            End With
            
            ' Удаляем исходные символы "_" и индексы
            eqRange.Characters(i + 1).Delete
            eqRange.Characters(i).Delete
        End If
    Next i
End Sub

---
Sub ConvertToWordEquation()
    Dim wordApp As Object
    Dim equationString As String
    
    ' Create a new instance of Microsoft Word
    Set wordApp = CreateObject("Word.Application")
    wordApp.Visible = True ' Optional: Make Word visible
    
    ' Define the equation string
    equationString = "w^2 + M_y"
    
    ' Create a new document in Word
    wordApp.Documents.Add
    
    ' Insert the equation into Word
    wordApp.Selection.Fields.Add wordApp.Selection.Range, Type:=wdFieldEmpty, Text:=equationString, PreserveFormatting:=True
    
    ' Clean up
    Set wordApp = Nothing
End Sub

_-----___

Sub CopyCellsToWord()
    Dim wordApp As Object
    Dim wordDoc As Object
    Dim wordRange As Object
    Dim eq As Object
    
    ' Создание экземпляра приложения Word
    Set wordApp = CreateObject("Word.Application")
    wordApp.Visible = True ' Сделать Word видимым (по желанию)
    
    ' Создание нового документа в Word
    Set wordDoc = wordApp.Documents.Add
    
    ' Создание объекта Range для вставки текста в документ Word
    Set wordRange = wordDoc.Content
    
    ' Вставка содержимого ячейки А1
    wordRange.InsertAfter Range("A1").Value & vbCrLf
    
    ' Вставка содержимого ячейки А2 как уравнение
    Set eq = wordDoc.OMaths.Add(wordRange)
    eq.Range.Text = Range("A2").Value
    
    ' Вставка содержимого ячейки А3
    wordRange.InsertAfter Range("A3").Value
    
    ' Освобождение ресурсов
    Set eq = Nothing
    Set wordRange = Nothing
    Set wordDoc = Nothing
    Set wordApp = Nothing
End Sub


Sub CopyCellsToWord()
    Dim wordApp As Object
    Dim wordDoc As Object
    Dim wordRange As Object
    Dim eq As Object
    
    ' Создание экземпляра приложения Word
    Set wordApp = CreateObject("Word.Application")
    wordApp.Visible = True ' Сделать Word видимым (по желанию)
    
    ' Создание нового документа в Word
    Set wordDoc = wordApp.Documents.Add
    
    ' Создание объекта Range для вставки текста в документ Word
    Set wordRange = wordDoc.Content
    
    ' Вставка содержимого ячейки А1
    wordRange.InsertAfter Range("A1").Value & vbCrLf
    
    ' Вставка содержимого ячейки А2 как уравнение
    Set eq = wordDoc.OMaths.Add(wordRange)
    eq.Range.Text = Range("A2").Value
    
    ' Вставка содержимого ячейки А3
    wordRange.InsertAfter Range("A3").Value
    
    ' Освобождение ресурсов
    Set eq = Nothing
    Set wordRange = Nothing
    Set wordDoc = Nothing
    Set wordApp = Nothing
End Sub

---
Sub CopyTextToWordEquation()
    Dim objWord As Object
    Dim objDoc As Object
    Dim rng As Range
    Dim equation As Object
    
    ' Создание экземпляра Word
    Set objWord = CreateObject("Word.Application")
    objWord.Visible = True
    
    ' Создание нового документа в Word
    Set objDoc = objWord.Documents.Add
    
    ' Выбор диапазона ячеек в Excel
    Set rng = ThisWorkbook.Sheets("Sheet1").Range("A1")
    
    ' Копирование текста в буфер обмена
    rng.Copy
    
    ' Вставка текста как формулы в Word
    objDoc.Range.PasteSpecial DataType:=wdPasteEquation
    
    ' Очистка буфера обмена
    Application.CutCopyMode = False
    
    ' Очистка ссылок на объекты
    Set objDoc = Nothing
    Set objWord = Nothing
    Set rng = Nothing
    Set equation = Nothing
End Sub

Sub ExportToWordEquation()
    Dim wdApp As Object
    Dim wdDoc As Object
    Dim rng As Range
    Dim equationText As String

    ' Создаем экземпляр приложения Word
    Set wdApp = CreateObject("Word.Application")
    wdApp.Visible = True ' делаем Word видимым

    ' Создаем новый документ Word
    Set wdDoc = wdApp.Documents.Add

    ' Копируем текст из ячейки А1
    Set rng = ThisWorkbook.Sheets("Sheet1").Range("A1")
    equationText = rng.Value
    
    ' Вставляем текст в документ Word
    wdDoc.Range.InsertAfter equationText

    ' Преобразуем в уравнение
    wdApp.Selection.OMaths.Add wdDoc.Range

    ' Освобождаем ресурсы
    Set rng = Nothing
    Set wdDoc = Nothing
    Set wdApp = Nothing
End Sub

---
Sub ExportToWordEquation()
    Dim wdApp As Object
    Dim wdDoc As Object
    Dim rng As Range
    Dim equationText As String

    ' Создаем экземпляр приложения Word
    Set wdApp = CreateObject("Word.Application")
    wdApp.Visible = True ' делаем Word видимым

    ' Создаем новый документ Word
    Set wdDoc = wdApp.Documents.Add

    ' Копируем текст из ячейки A1
    Set rng = ThisWorkbook.Sheets("Sheet1").Range("A1")
    equationText = rng.Value
    
    ' Вставляем текст в документ Word
    wdDoc.Range.InsertAfter equationText
    wdDoc.Range.InsertParagraphAfter ' добавляем разрыв абзаца

    ' Преобразуем в уравнение
    wdApp.Selection.OMaths.Add wdDoc.Paragraphs(1).Range

    ' Копируем текст из ячейки A2
    Set rng = ThisWorkbook.Sheets("Sheet1").Range("A2")
    equationText = rng.Value

    ' Вставляем текст в документ Word
    wdDoc.Range.InsertAfter equationText
    wdDoc.Range.InsertParagraphAfter ' добавляем разрыв абзаца

    ' Преобразуем в уравнение
    wdApp.Selection.OMaths.Add wdDoc.Paragraphs(2).Range

    ' Освобождаем ресурсы
    Set rng = Nothing
    Set wdDoc = Nothing
    Set wdApp = Nothing
End Sub

---

Sub ExportToWordEquation()
    Dim wdApp As Object
    Dim wdDoc As Object
    Dim equationText As String

    ' Создаем экземпляр приложения Word
    Set wdApp = CreateObject("Word.Application")
    wdApp.Visible = True ' делаем Word видимым

    ' Создаем новый документ Word
    Set wdDoc = wdApp.Documents.Add

    ' Копируем текст из ячейки A1
    equationText = ThisWorkbook.Sheets("Sheet1").Range("A1").Value
    
    ' Вставляем текст в документ Word
    wdDoc.Range.InsertAfter equationText
    wdDoc.Range.InsertAfter vbCrLf ' добавляем разрыв абзаца

    ' Преобразуем в уравнение
    wdApp.Selection.MoveStart Unit:=6 ' wdParagraph
    wdApp.Selection.MoveEnd Unit:=6
    wdApp.Selection.OMaths.Add wdApp.Selection.Range
    wdApp.Selection.MoveRight Unit:=5 ' wdCharacter
    wdApp.Selection.TypeParagraph ' нажимаем Enter

    ' Копируем текст из ячейки A2
    equationText = ThisWorkbook.Sheets("Sheet1").Range("A2").Value

    ' Вставляем текст в документ Word
    wdApp.Selection.TypeText Text:=equationText
    wdApp.Selection.TypeParagraph ' добавляем разрыв абзаца

    ' Преобразуем в уравнение
    wdApp.Selection.MoveStart Unit:=6 ' wdParagraph
    wdApp.Selection.MoveEnd Unit:=6
    wdApp.Selection.OMaths.Add wdApp.Selection.Range
    wdApp.Selection.MoveRight Unit:=5 ' wdCharacter
    wdApp.Selection.TypeParagraph ' нажимаем Enter

    ' Освобождаем ресурсы
    Set wd


---
Sub CreateWordEquation()
    Dim wdApp As Object
    Dim wdDoc As Object
    Dim equation As Object

    ' Создаем новый экземпляр Word
    Set wdApp = CreateObject("Word.Application")
    wdApp.Visible = True ' Делаем Word видимым

    ' Создаем новый документ в Word
    Set wdDoc = wdApp.Documents.Add

    ' Добавляем уравнение в Word Equation
    Set equation = wdDoc.OMaths.Add(wdDoc.Range)
    equation.BuildUp

    ' Добавляем текст в уравнение
    equation.OMaths(1).Functions.Add Range:=equation.OMaths(1).Range, _
    Type:=wdOMathFunctionType.wdOMathFunctionNormal, _
    Function:=wdOMathFunctionType.wdOMathFunctionSuperscript
    equation.OMaths(1).Functions.Add Range:=equation.OMaths(1).Range, _
    Type:=wdOMathFunctionType.wdOMathFunctionNormal, _
    Function:=wdOMathFunctionType.wdOMathFunctionSum

    ' Освобождаем память, выделенную для объектов
    Set equation = Nothing
    Set wdDoc = Nothing
    Set wdApp = Nothing
End Sub

---
Sub ConvertToEquation()
    Dim rng As Range
    Dim startPos As Long
    Dim endPos As Long
    Dim latexExpression As String
    Dim formula As String

    ' Search for text enclosed in ##
    Set rng = ActiveDocument.Content
    With rng.Find
        .Text = "##*##"
        .MatchWildcards = True
        Do While .Execute
            startPos = rng.Start + 2 ' Position after first ##
            endPos = rng.End - 2 ' Position before last ##
            latexExpression = Mid(rng.Text, 3, Len(rng.Text) - 4)

            ' Replace ##...## with LaTeX equation field
            rng.Text = ""
            rng.Collapse Direction:=wdCollapseStart
            ActiveDocument.OMaths.Add rng
            Set formula = rng.OMaths(1)
            formula.Range.Text = latexExpression
            formula.BuildUp

            ' Move to next instance
            rng.Collapse Direction:=wdCollapseEnd
        Loop
    End With
End Sub


----
Sub ConvertToEquation()
    Dim rng As Range
    Dim startPos As Long
    Dim endPos As Long
    Dim latexExpression As String

    ' Search for text enclosed in ##
    Set rng = ActiveDocument.Content
    With rng.Find
        .Text = "##*##"
        .MatchWildcards = True
        Do While .Execute
            ' Save positions of the found text
            startPos = rng.Start + 2 ' Position after first ##
            endPos = rng.End - 2 ' Position before last ##
            latexExpression = Mid(rng.Text, 3, Len(rng.Text) - 4)
            
            ' Clear the found text
            rng.Text = ""
            
            ' Create a new range for the equation
            Dim eqRange As Range
            Set eqRange = ActiveDocument.Range(startPos, startPos)
            
            ' Add the LaTeX equation
            ActiveDocument.OMaths.Add eqRange
            eqRange.Text = latexExpression
            
            ' Build the equation
            eqRange.OMaths(1).BuildUp
            
            ' Move to next instance
            rng.Collapse Direction:=wdCollapseEnd
        Loop
    End With
End Sub

---

Sub ConvertToEquation()
    Dim rng As Range
    Dim startPos As Long
    Dim endPos As Long
    Dim latexExpression As String

    ' Search for text enclosed in ##
    Set rng = ActiveDocument.Content
    With rng.Find
        .Text = "##*##"
        .MatchWildcards = True
        Do While .Execute
            ' Save positions of the found text
            startPos = rng.Start + 2 ' Position after first ##
            endPos = rng.End - 2 ' Position before last ##
            latexExpression = Mid(rng.Text, 3, Len(rng.Text) - 4)
            
            ' Clear the found text
            rng.Text = ""
            
            ' Create a new range for the equation
            Dim eqRange As Range
            Set eqRange = ActiveDocument.Range(startPos, startPos)
            
            ' Add the LaTeX equation
            Dim eq As OMath
            Set eq = ActiveDocument.OMaths.Add(eqRange)
            eqRange.Text = latexExpression
            
            ' Build the equation
            eq.BuildUp
            
            ' Move to next instance
            rng.Collapse Direction:=wdCollapseEnd
        Loop
    End With
End Sub

---
Sub ConvertTextToEquation()
    Dim doc As Document
    Dim rng As Range
    Dim eqText As String
    
    Set doc = ActiveDocument
    Set rng = doc.Range
    
    With rng.Find
        .Text = "##*##" ' Поиск текста заключенного между ##
        .MatchWildcards = True
        
        Do While .Execute
            eqText = rng.Text
            eqText = Replace(eqText, "##", "") ' Удаление ##
            
            ' Вставка уравнения вместо текста
            rng.Text = "" ' Очистка текущего диапазона
            rng.OMaths.Add rng, eqText ' Вставка уравнения
            
            Set rng = rng.Next ' Переход к следующему найденному диапазону
        Loop
    End With
End Sub

Sub ConvertTextToEquation()
    Dim doc As Document
    Dim rng As Range
    Dim eqText As String
    Dim eq As OMath
    
    Set doc = ActiveDocument
    Set rng = doc.Content
    
    With rng.Find
        .Text = "##*##" ' Поиск текста заключенного между ##
        .MatchWildcards = True
        
        Do While .Execute
            eqText = rng.Text
            eqText = Replace(eqText, "##", "") ' Удаление ##
            
            ' Создание объекта Equation и вставка вместо текста
            rng.Text = "" ' Очистка текущего диапазона
            Set eq = rng.OMaths.Add(rng)
            eq.Range.Text = eqText ' Вставка текста в уравнение
            
            Set rng = doc.Range(rng.End, doc.Content.End) ' Переход к следующему найденному диапазону
        Loop
    End With
End Sub

Sub ConvertToEquation()
    Dim doc As Document
    Dim rng As Range
    Dim wdEquation As OMath
    
    ' Открываем текущий документ Word
    Set doc = ActiveDocument
    
    ' Указываем диапазон для поиска
    Set rng = doc.Content
    
    ' Проходим по всему тексту
    With rng.Find
        .ClearFormatting
        .Text = "##*##"
        .Forward = True
        .Wrap = wdFindStop
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = True
        .Execute
        ' Преобразуем каждое найденное слово в уравнение
        Do While .Found
            ' Помещаем текст уравнения в OMath
            Set wdEquation = rng.OMaths.Add(rng)
            wdEquation.Range.Text = Replace(rng.Text, "##", "")
            ' Переходим к следующему найденному слову
            .Execute
        Loop
    End With
    
    ' Освобождаем память
    Set doc = Nothing
    Set rng = Nothing
    Set wdEquation = Nothing
    
    ' Оповещаем пользователя об успешном завершении
    MsgBox "Преобразование завершено!", vbInformation
End Sub

Sub ConvertToEquation()
    Dim rng As Range
    Dim eqText As String
    Dim wdEquation As OMath
    
    ' Проходим по всему тексту
    For Each rng In ActiveDocument.StoryRanges
        Do
            ' Проверяем каждое слово внутри диапазона
            If InStr(rng.Text, "##") > 0 Then
                eqText = Replace(rng.Text, "##", "")
                ' Создаем новый объект OMath
                Set wdEquation = rng.OMaths.Add(rng)
                ' Устанавливаем текст уравнения
                wdEquation.Range.Text = eqText
            End If
            ' Переходим к следующему диапазону
            Set rng = rng.NextStoryRange
        Loop Until rng Is Nothing
    Next rng
    
    ' Оповещаем пользователя об успешном завершении
    MsgBox "Преобразование завершено!", vbInformation
End Sub



Sub InsertEquationsWithLineNumbers()
    Dim doc As Document
    Dim i As Integer
    Dim eqCounter As Integer
    Dim lineCounter As Integer
    Dim lineNumber As Integer
    Dim rng As Range
    Dim equationText As String
    
    ' Устанавливаем текущий документ
    Set doc = ActiveDocument
    
    ' Начальные значения счетчиков
    eqCounter = 1
    lineCounter = 1
    
    ' Проходим по каждому абзацу в документе
    For i = 1 To doc.Paragraphs.Count
        ' Если текущая строка является одной из десяти, создаем уравнение с номером строки
        If lineCounter Mod 10 = 0 Then
            ' Создаем новую область
            Set rng = doc.Paragraphs(i).Range
            rng.Collapse wdCollapseStart
            rng.MoveStart wdCharacter, -1
            
            ' Получаем номер текущей строки
            lineNumber = rng.Information(wdFirstCharacterLineNumber)
            
            ' Генерируем текст уравнения с номером строки
            equationText = "y = x + " & lineNumber
            
            ' Вставляем уравнение в область
            rng.InsertAfter vbCrLf
            rng.Collapse wdCollapseEnd
            rng.Formula = equationText
            
            ' Увеличиваем счетчик уравнений
            eqCounter = eqCounter + 1
        End If
        
        ' Увеличиваем счетчик строк
        lineCounter = lineCounter + 1
    Next i
End Sub


---
Sub InsertEquationsWithLineNumbers()
    Dim doc As Document
    Dim i As Integer
    Dim eqCounter As Integer
    Dim lineCounter As Integer
    Dim lineNumber As Integer
    Dim rng As Range
    Dim equationText As String
    
    ' Устанавливаем текущий документ
    Set doc = ActiveDocument
    
    ' Начальные значения счетчиков
    eqCounter = 1
    lineCounter = 1
    
    ' Проходим по каждому абзацу в документе
    For i = 1 To doc.Paragraphs.Count
        ' Если текущая строка является одной из десяти, создаем уравнение с номером строки
        If lineCounter Mod 10 = 0 Then
            ' Создаем новую область
            Set rng = doc.Paragraphs(i).Range
            rng.Collapse wdCollapseStart
            
            ' Получаем номер текущей строки
            lineNumber = rng.Information(wdFirstCharacterLineNumber)
            
            ' Генерируем текст уравнения с номером строки
            equationText = "y = x + " & lineNumber
            
            ' Вставляем уравнение в область
            rng.OMaths.Add rng
            rng.OMaths(1).BuildUp equationText
            rng.InsertAfter vbCrLf
            
            ' Увеличиваем счетчик уравнений
            eqCounter = eqCounter + 1
        End If
        
        ' Увеличиваем счетчик строк
        lineCounter = lineCounter + 1
    Next i
End Sub

Sub AddEquations()
    Dim i As Integer
    Dim j As Integer
    Dim doc As Document
    Dim rng As Range
    Dim eq As OMath

    ' Получаем активный документ
    Set doc = ActiveDocument

    ' Проходимся по каждым 10 строкам
    For i = 1 To doc.Paragraphs.Count Step 10
        ' Создаем диапазон для текущих 10 строк
        Set rng = doc.Range(Start:=doc.Paragraphs(i).Range.Start, End:=doc.Paragraphs(i + 9).Range.End)

        ' Вставляем Equation с номером строки
        For j = 1 To 10
            Set eq = rng.OMaths.Add(rng)
            eq.Range.Text = "Equation " & i + j - 1 ' Номер строки
        Next j
    Next i
End Sub

-+-+-+-
Sub InsertEquationsWithLineNumbers()
    Dim doc As Document
    Dim rng As Range
    Dim i As Integer
    
    ' Определение текущего документа
    Set doc = ActiveDocument
    
    ' Определение начальной области для вставки уравнений
    Set rng = doc.Range
    
    ' Перебор каждой 10 строки в документе
    For i = 1 To doc.Paragraphs.Count Step 10
        ' Переход к следующей 10 строке
        rng.MoveStart wdParagraph, 10
        
        ' Вставка уравнения с номером строки
        InsertEquation rng, "Equation " & i
    Next i
End Sub

Sub InsertEquation(rng As Range, equationText As String)
    Dim eq As OMath
    
    ' Вставка пустого объекта OMath в указанную область
    Set eq = rng.OMaths.Add(rng)
    
    ' Добавление текста к объекту OMath
    eq.Range.Text = equationText
    
    ' Установка стиля для объекта OMath
    eq.Range.OMaths(1).OMaths(1).Type = wdOMathInline
    
    ' Установка выравнивания по центру
    eq.Range.ParagraphFormat.Alignment = wdAlignParagraphCenter
End Sub


